import time
current_time = time.time()


def speed_calc_decorator(function):
  def wrapper_function():
    start_time = time.time()
    function()
    end_time = time.time()
    print(f'{function.__name__} run speed: {end_time - start_time}s')
  return wrapper_function


@speed_calc_decorator
def fast_function():
    for i in range(10000000):
        i * i

@speed_calc_decorator
def slow_function():
    for i in range(100000000):
        i * i

fast_function()
slow_function()

## Advanced Python Decorator Functions

class User:
    def __init__(self,name):
        self.name = name
        self.is_logged_in = False

def is_authenticated_decorator(function):
    def wrapper(*args, **kwargs):
        if args[0].is_logged_in == True:
            function(args[0])
    return wrapper


def create_blog_post(user):
    print(f'This is {user.name}'s new blog post.')

new_user = User('Tad')
new_user.is_logged_in = True
create_blog_post(new_user)